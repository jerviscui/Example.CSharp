// <auto-generated />
using System;
using EfCoreTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EfCoreTest.Migrations.Pgsql
{
    [DbContext(typeof(PgsqlDbContext))]
    [Migration("20250115083629_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("ProviderKey", TestDbContext.EfCoreDatabaseProvider.PostgreSql)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EfCoreTest.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "bbbb",
                            IsDelete = false,
                            Title = "aaaa"
                        });
                });

            modelBuilder.Entity("EfCoreTest.BlogTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BlogId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogTags");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlogId = 1L,
                            IsDelete = false,
                            TagId = "tag1"
                        },
                        new
                        {
                            Id = 2L,
                            BlogId = 1L,
                            IsDelete = false,
                            TagId = "tag2"
                        });
                });

            modelBuilder.Entity("EfCoreTest.DetailedSplitOrder", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("SplitOrder", (string)null);
                });

            modelBuilder.Entity("EfCoreTest.Family", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long?>("OldFamilyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OldFamilyId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "address"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "address",
                            OldFamilyId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Address = "address",
                            OldFamilyId = 2L
                        });
                });

            modelBuilder.Entity("EfCoreTest.MssqlRowVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("RowVersion")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("MssqlRowVersions");
                });

            modelBuilder.Entity("EfCoreTest.MysqlRowVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RowVersion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MysqlRowVersions");
                });

            modelBuilder.Entity("EfCoreTest.Order", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Buyer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EfCoreTest.Paging.FactSale", b =>
                {
                    b.Property<int?>("DateId")
                        .HasColumnType("integer")
                        .HasColumnName("date_id");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("OtherData")
                        .HasMaxLength(1000)
                        .HasColumnType("char(1000)")
                        .HasColumnName("other_data");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer")
                        .HasColumnName("store_id");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric(7, 2)")
                        .HasColumnName("unit_price");

                    b.HasIndex(new[] { "DateId" }, "ci")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("fact_sales");
                });

            modelBuilder.Entity("EfCoreTest.Person", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Decimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<long>("FamilyId")
                        .HasColumnType("bigint");

                    b.Property<long>("Long")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Decimal = 0m,
                            FamilyId = 1L,
                            Long = 0L,
                            Name = "name"
                        },
                        new
                        {
                            Id = 2L,
                            Decimal = 22.22m,
                            FamilyId = 2L,
                            Long = 11L,
                            Name = "name",
                            TeacherId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Decimal = 22.22m,
                            FamilyId = 3L,
                            Long = 11L,
                            Name = "name",
                            TeacherId = 2L
                        },
                        new
                        {
                            Id = 100L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name0"
                        },
                        new
                        {
                            Id = 101L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name1"
                        },
                        new
                        {
                            Id = 102L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name2"
                        },
                        new
                        {
                            Id = 103L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name3"
                        },
                        new
                        {
                            Id = 104L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name4"
                        },
                        new
                        {
                            Id = 105L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name5"
                        },
                        new
                        {
                            Id = 106L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name6"
                        },
                        new
                        {
                            Id = 107L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name7"
                        },
                        new
                        {
                            Id = 108L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name8"
                        },
                        new
                        {
                            Id = 109L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name9"
                        },
                        new
                        {
                            Id = 110L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name10"
                        },
                        new
                        {
                            Id = 111L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name11"
                        },
                        new
                        {
                            Id = 112L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name12"
                        },
                        new
                        {
                            Id = 113L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name13"
                        },
                        new
                        {
                            Id = 114L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name14"
                        },
                        new
                        {
                            Id = 115L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name15"
                        },
                        new
                        {
                            Id = 116L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name16"
                        },
                        new
                        {
                            Id = 117L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name17"
                        },
                        new
                        {
                            Id = 118L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name18"
                        },
                        new
                        {
                            Id = 119L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name19"
                        },
                        new
                        {
                            Id = 120L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name20"
                        },
                        new
                        {
                            Id = 121L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name21"
                        },
                        new
                        {
                            Id = 122L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name22"
                        },
                        new
                        {
                            Id = 123L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name23"
                        },
                        new
                        {
                            Id = 124L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name24"
                        },
                        new
                        {
                            Id = 125L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name25"
                        },
                        new
                        {
                            Id = 126L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name26"
                        },
                        new
                        {
                            Id = 127L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name27"
                        },
                        new
                        {
                            Id = 128L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name28"
                        },
                        new
                        {
                            Id = 129L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name29"
                        },
                        new
                        {
                            Id = 130L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name30"
                        },
                        new
                        {
                            Id = 131L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name31"
                        },
                        new
                        {
                            Id = 132L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name32"
                        },
                        new
                        {
                            Id = 133L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name33"
                        },
                        new
                        {
                            Id = 134L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name34"
                        },
                        new
                        {
                            Id = 135L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name35"
                        },
                        new
                        {
                            Id = 136L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name36"
                        },
                        new
                        {
                            Id = 137L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name37"
                        },
                        new
                        {
                            Id = 138L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name38"
                        },
                        new
                        {
                            Id = 139L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name39"
                        },
                        new
                        {
                            Id = 140L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name40"
                        },
                        new
                        {
                            Id = 141L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name41"
                        },
                        new
                        {
                            Id = 142L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name42"
                        },
                        new
                        {
                            Id = 143L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name43"
                        },
                        new
                        {
                            Id = 144L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name44"
                        },
                        new
                        {
                            Id = 145L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name45"
                        },
                        new
                        {
                            Id = 146L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name46"
                        },
                        new
                        {
                            Id = 147L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name47"
                        },
                        new
                        {
                            Id = 148L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name48"
                        },
                        new
                        {
                            Id = 149L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name49"
                        },
                        new
                        {
                            Id = 150L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name50"
                        },
                        new
                        {
                            Id = 151L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name51"
                        },
                        new
                        {
                            Id = 152L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name52"
                        },
                        new
                        {
                            Id = 153L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name53"
                        },
                        new
                        {
                            Id = 154L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name54"
                        },
                        new
                        {
                            Id = 155L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name55"
                        },
                        new
                        {
                            Id = 156L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name56"
                        },
                        new
                        {
                            Id = 157L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name57"
                        },
                        new
                        {
                            Id = 158L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name58"
                        },
                        new
                        {
                            Id = 159L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name59"
                        },
                        new
                        {
                            Id = 160L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name60"
                        },
                        new
                        {
                            Id = 161L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name61"
                        },
                        new
                        {
                            Id = 162L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name62"
                        },
                        new
                        {
                            Id = 163L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name63"
                        },
                        new
                        {
                            Id = 164L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name64"
                        },
                        new
                        {
                            Id = 165L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name65"
                        },
                        new
                        {
                            Id = 166L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name66"
                        },
                        new
                        {
                            Id = 167L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name67"
                        },
                        new
                        {
                            Id = 168L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name68"
                        },
                        new
                        {
                            Id = 169L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name69"
                        },
                        new
                        {
                            Id = 170L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name70"
                        },
                        new
                        {
                            Id = 171L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name71"
                        },
                        new
                        {
                            Id = 172L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name72"
                        },
                        new
                        {
                            Id = 173L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name73"
                        },
                        new
                        {
                            Id = 174L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name74"
                        },
                        new
                        {
                            Id = 175L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name75"
                        },
                        new
                        {
                            Id = 176L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name76"
                        },
                        new
                        {
                            Id = 177L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name77"
                        },
                        new
                        {
                            Id = 178L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name78"
                        },
                        new
                        {
                            Id = 179L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name79"
                        },
                        new
                        {
                            Id = 180L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name80"
                        },
                        new
                        {
                            Id = 181L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name81"
                        },
                        new
                        {
                            Id = 182L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name82"
                        },
                        new
                        {
                            Id = 183L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name83"
                        },
                        new
                        {
                            Id = 184L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name84"
                        },
                        new
                        {
                            Id = 185L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name85"
                        },
                        new
                        {
                            Id = 186L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name86"
                        },
                        new
                        {
                            Id = 187L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name87"
                        },
                        new
                        {
                            Id = 188L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name88"
                        },
                        new
                        {
                            Id = 189L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name89"
                        },
                        new
                        {
                            Id = 190L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name90"
                        },
                        new
                        {
                            Id = 191L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name91"
                        },
                        new
                        {
                            Id = 192L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name92"
                        },
                        new
                        {
                            Id = 193L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name93"
                        },
                        new
                        {
                            Id = 194L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name94"
                        },
                        new
                        {
                            Id = 195L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name95"
                        },
                        new
                        {
                            Id = 196L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name96"
                        },
                        new
                        {
                            Id = 197L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name97"
                        },
                        new
                        {
                            Id = 198L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name98"
                        },
                        new
                        {
                            Id = 199L,
                            Decimal = 0m,
                            FamilyId = 2L,
                            Long = 0L,
                            Name = "name99"
                        });
                });

            modelBuilder.Entity("EfCoreTest.PgsqlRowVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("PgsqlRowVersions");
                });

            modelBuilder.Entity("EfCoreTest.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("PostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Content = "content1",
                            Title = "title1"
                        },
                        new
                        {
                            PostId = 2,
                            Content = "content2",
                            Title = "title2"
                        });
                });

            modelBuilder.Entity("EfCoreTest.SplitOrder", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("SplitOrder", (string)null);
                });

            modelBuilder.Entity("EfCoreTest.Tag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("text");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = "tag1"
                        },
                        new
                        {
                            TagId = "tag2"
                        });
                });

            modelBuilder.Entity("EfCoreTest.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            Name = "teacher"
                        });
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<string>("TagId")
                        .HasColumnType("text");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = "tag1"
                        },
                        new
                        {
                            PostId = 1,
                            TagId = "tag2"
                        },
                        new
                        {
                            PostId = 2,
                            TagId = "tag1"
                        },
                        new
                        {
                            PostId = 2,
                            TagId = "tag2"
                        });
                });

            modelBuilder.Entity("EfCoreTest.BlogTag", b =>
                {
                    b.HasOne("EfCoreTest.Blog", null)
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreTest.DetailedSplitOrder", b =>
                {
                    b.HasOne("EfCoreTest.SplitOrder", null)
                        .WithOne("DetailedSplitOrder")
                        .HasForeignKey("EfCoreTest.DetailedSplitOrder", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreTest.Family", b =>
                {
                    b.HasOne("EfCoreTest.Family", null)
                        .WithMany()
                        .HasForeignKey("OldFamilyId");
                });

            modelBuilder.Entity("EfCoreTest.Order", b =>
                {
                    b.OwnsOne("EfCoreTest.StreetAddress", "StreetAddress", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.HasKey("OrderId");

                            b1.HasIndex("City");

                            b1.HasIndex("Street");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("StreetAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreTest.Person", b =>
                {
                    b.HasOne("EfCoreTest.Family", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreTest.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("EfCoreTest.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("FK_PostTag_Posts_PostId");

                    b.HasOne("EfCoreTest.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PostTag_Tags_TagId");
                });

            modelBuilder.Entity("EfCoreTest.Blog", b =>
                {
                    b.Navigation("BlogTags");
                });

            modelBuilder.Entity("EfCoreTest.SplitOrder", b =>
                {
                    b.Navigation("DetailedSplitOrder")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
